name: Build-CI
on:
  push:
    tags:
      - 'CUST*'
jobs:
  build:
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache Rust Dependecies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Build Project
        run: ./scripts/init.sh &&rustup target add x86_64-apple-darwin --toolchain nightly-2021-05-11 && cargo build --release && ./target/release/polkadex-node build-spec --chain local  >customSpecRaw.json
      - name: PackRelease
        run: |
           zip PolkadexNodeMacOS.zip --junk-paths  target/release/polkadex-node customSpecRaw.json
      - name: Archive binary
        uses: actions/upload-artifact@v1
        with:
          name: PolkadexNodeMacOS.zip
          path: PolkadexNodeMacOS.zip
      - name: Archive chainspec
        uses: actions/upload-artifact@v1
        with:
          name: customSpecRaw.json
          path: customSpecRaw.json
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: true
      - name: Upload Release Asset
        id: upload-release-asset0 
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: PolkadexNodeMacOS.zip
          asset_name: PolkadexNodeMacOS.zip
          asset_content_type: application/octet-stream 
      - name: Upload Release chainspec
        id: upload-release-asset1 
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: customSpecRaw.json
          asset_name: customSpecRaw.json
          asset_content_type: application/json